[{"C:\\Users\\andre\\Desktop\\data-representatives\\orders\\client\\src\\index.js":"1","C:\\Users\\andre\\Desktop\\data-representatives\\orders\\client\\src\\App.js":"2","C:\\Users\\andre\\Desktop\\data-representatives\\orders\\client\\src\\reportWebVitals.js":"3","C:\\Users\\andre\\Desktop\\data-representatives\\orders\\client\\src\\components\\layout\\Header.js":"4","C:\\Users\\andre\\Desktop\\data-representatives\\orders\\client\\src\\components\\layout\\Navbar.js":"5","C:\\Users\\andre\\Desktop\\data-representatives\\orders\\client\\src\\components\\layout\\Footer.js":"6","C:\\Users\\andre\\Desktop\\data-representatives\\orders\\client\\src\\components\\Orders.js":"7","C:\\Users\\andre\\Desktop\\data-representatives\\orders\\client\\src\\components\\AddOrder.js":"8","C:\\Users\\andre\\Desktop\\data-representatives\\orders\\client\\src\\components\\Order.js":"9","C:\\Users\\andre\\Desktop\\data-representatives\\orders\\client\\src\\components\\EditOrder.js":"10"},{"size":521,"mtime":1609355238542,"results":"11","hashOfConfig":"12"},{"size":1577,"mtime":1609431356545,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":506,"mtime":1609350669521,"results":"15","hashOfConfig":"12"},{"size":1594,"mtime":1609669609122,"results":"16","hashOfConfig":"12"},{"size":590,"mtime":1609416589827,"results":"17","hashOfConfig":"12"},{"size":7693,"mtime":1609618875247,"results":"18","hashOfConfig":"12"},{"size":3474,"mtime":1609619830515,"results":"19","hashOfConfig":"12"},{"size":2315,"mtime":1609439355727,"results":"20","hashOfConfig":"12"},{"size":4348,"mtime":1609619754045,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"cl06jq",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},"C:\\Users\\andre\\Desktop\\data-representatives\\orders\\client\\src\\index.js",[],["45","46"],"C:\\Users\\andre\\Desktop\\data-representatives\\orders\\client\\src\\App.js",[],"C:\\Users\\andre\\Desktop\\data-representatives\\orders\\client\\src\\reportWebVitals.js",[],"C:\\Users\\andre\\Desktop\\data-representatives\\orders\\client\\src\\components\\layout\\Header.js",[],"C:\\Users\\andre\\Desktop\\data-representatives\\orders\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\andre\\Desktop\\data-representatives\\orders\\client\\src\\components\\layout\\Footer.js",[],"C:\\Users\\andre\\Desktop\\data-representatives\\orders\\client\\src\\components\\Orders.js",["47"],"import React, {useState, Component} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport spinner from \"../spinner.gif\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\n\r\n//displaying db data using hooks\r\n\r\n  //hooks used for inputs to db\r\n  \r\n\r\nconst Orders = ({ posts }) => {\r\n  const [order, setOrder] = useState([]);\r\n  //modal set for false so it has ti be prompted to open\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [productno, setProductno] = useState(\"\");\r\n  const [fileName, setFileName] = useState(\"\");\r\n  const [message, setMessage] = useState('')\r\n  \r\n\r\n    //function to grab value for image\r\n    const onChangeFile = e => {\r\n      setFileName(e.target.files[0]);\r\n    }\r\n\r\n\r\n\r\n    //when button is clicked \r\n    const changeOnClick = e => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n\r\n    formData.append(\"name\", name);\r\n    formData.append(\"email\", email);\r\n    formData.append(\"productno\", productno);\r\n    formData.append(\"image\", fileName);\r\n\r\n       \r\n\r\n        setName(\"\");\r\n        setEmail(\"\");\r\n        setProductno(\"\");\r\n        setFileName(\"\");\r\n\r\n        //axios used to send to db\r\n        //set message to show instead of console.log\r\n        axios\r\n        .post(\"/orders/add\", formData)\r\n        .then((res) => setMessage(res.data))\r\n        .catch((err) => {\r\n            console.log(err)\r\n        });\r\n\r\n        \r\n    };\r\n\r\n\r\n  const showModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  //delete order by id\r\n  //path to order and grab it by id to delete\r\n  const deleteOrder = (id) => {\r\n    axios.delete(`/orders/${id}`)\r\n    .then((response) => (response.data));\r\n    //filter by id \r\n  setOrder(order.filter((element) => element._id !== id));\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    //if theres no data to show spinner will play till it loads\r\n    //images are stored in public/uploads when added and then displayed \r\n    //customer names are links so you can click them and will bring you to a page by id \r\n    //modal added with form, that submits to db \r\n    <MainContainer>\r\n      {!posts.length ? (\r\n        <img src={spinner} alt=\"loading..\" />\r\n      ) : (\r\n        <div className=\"container-xl\">\r\n          <div className=\"table-wrapper\">\r\n          <div className=\"table-title\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-sm-6\">\r\n\t\t\t\t\t\t<h2>Manage Customer Orders</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-sm-6\">\r\n\t\t\t\t\t<button onClick={showModal}  className=\"btn \">Add Customer Order</button>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n        <div className=\"container\">\r\n\r\n\r\n      <Modal show={isOpen} onHide={hideModal}>\r\n      <AddOrderContainer>\r\n        <Modal.Header>\r\n          <Modal.Title><h1> Add New Customer Order</h1></Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body><div className=\"container\">\r\n        \r\n        <span className=\"message\">{message}</span>\r\n        <form onSubmit={changeOnClick} encType=\"multipart/form-data\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Customer Name</label>\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              className=\"form-control\"\r\n              placeholder=\"Enter Customer Name\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Customer Email</label>\r\n            <input\r\n              type=\"Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"form-control\"\r\n              placeholder=\"Enter Email Address\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"productno\">Product Number</label>\r\n            <input\r\n              type=\"text\"\r\n              value={productno}\r\n              onChange={(e)=> setProductno(e.target.value)}\r\n              className=\"form-control\"\r\n              placeholder=\"Enter Product Number\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"file\"> Choose Product Image</label>\r\n            <input type=\"file\" filename=\"image\"\r\n            className=\"form-control-file\"\r\n            onChange={onChangeFile}/>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Submit Order\r\n          </button>\r\n          \r\n        </form>\r\n      </div></Modal.Body>\r\n        <Modal.Footer>\r\n          <button className=\"btn btn-primary\" onClick={hideModal}>Cancel</button>\r\n         \r\n        </Modal.Footer>\r\n        </AddOrderContainer>\r\n      </Modal>\r\n    \r\n    </div>\r\n      \r\n          <Table className=\"table-hover\">\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Product Number</th>\r\n                <th>Product Image</th>\r\n                <th>Edit</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {posts.map((order, key) => (\r\n                <tr>\r\n                  \r\n                  <Link\r\n                    to={{\r\n                      pathname: `/order/${order._id}`\r\n                    }}\r\n                  >\r\n                    <td>{order.name}</td>\r\n                  </Link>\r\n                  \r\n                  <td>{order.email}</td>\r\n                  <td>{order.productno}</td>\r\n                  <td><img src={`/uploads/${order.image}`} alt=\"...\"/>\r\n                  </td>\r\n                  <td>\r\n                    {\" \"}\r\n                    <Link\r\n                      to={`/update/${order._id}`}\r\n                      className=\"btn btn-outline-success\"\r\n                    >\r\n                      {\" \"}\r\n                      Edit Order\r\n                    </Link>\r\n                  </td>\r\n                  <td>\r\n                    <button onClick={() => deleteOrder(order._id)} className=\"btn btn-outline-danger\">\r\n                      {\" \"}\r\n                      Delete Order\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        </div>\r\n      )}\r\n     \r\n    </MainContainer>\r\n  );\r\n};\r\n\r\n\r\nexport default Orders;\r\n\r\n//main container\r\nconst MainContainer = styled.div`\r\n  margin: 7rem 0;\r\n\r\n  img {\r\n    width: 10rem;\r\n    display: block;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  td {\r\n    color: #544348;\r\n  }\r\n  .table-wrapper {\r\n    background: #fff;\r\n    padding: 20px 25px;\r\n    border-radius: 3px;\r\n    min-width: 1000px;\r\n    box-shadow: 0 1px 1px rgba(0,0,0,.05);\r\n  }\r\n  .table-title {        \r\n    padding-bottom: 15px;\r\n    padding: 16px 30px;\r\n    min-width: 100%;\r\n    margin: -20px -25px 10px;\r\n    border-radius: 3px 3px 0 0;\r\n  }\r\n  .table-title .btn {\r\n    float: right;\r\n    background: var(--magenta);\r\n  }\r\n`;\r\nconst AddOrderContainer = styled.div`\r\n  margin: 3rem auto;\r\n  padding: 4rem;\r\n  width: 31.25rem;\r\n\r\n  h1{\r\n      font-width: 900;\r\n      color: var( --magenta);\r\n      text-align: center;\r\n\r\n  }\r\n\r\n  .btn-primary {\r\n      margin-top: 2rem;\r\n      background: var(--magenta);\r\n      border: none;\r\n    &:hover{\r\n        background: var(--lightMagenta);\r\n    }\r\n  }\r\n\r\n  .message {\r\n    font-weight: 900;\r\n    color: var(--lightMagenta);\r\n    text-align: center;\r\n\r\n}\r\n`;","C:\\Users\\andre\\Desktop\\data-representatives\\orders\\client\\src\\components\\AddOrder.js",[],"C:\\Users\\andre\\Desktop\\data-representatives\\orders\\client\\src\\components\\Order.js",[],"C:\\Users\\andre\\Desktop\\data-representatives\\orders\\client\\src\\components\\EditOrder.js",["48"],"import React, {useState, useEffect} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst EditOrder = props => {\r\n    //hooks used for inputs to db\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [productno, setProductno] = useState(\"\");\r\n    const [message, setMessage] = useState('');\r\n    const [fileName, setFileName] = useState(\"\");\r\n\r\n\r\n    \r\n        //function to grab value for image\r\n        const onChangeFile = (e) => {\r\n            setFileName(e.target.files[0]);\r\n          };\r\n\r\n    //when button is clicked \r\n    const changeOnClick = (e)=> {\r\n        e.preventDefault();\r\n\r\n\r\n\r\n      const formData = new FormData();\r\n\r\n    formData.append(\"name\", name);\r\n    formData.append(\"email\", email);\r\n    formData.append(\"productno\", productno);\r\n    formData.append(\"image\", fileName);\r\n\r\n       \r\n\r\n        setName(\"\");\r\n        setEmail(\"\");\r\n        setProductno(\"\");\r\n\r\n        //axios used to update the db\r\n        //set message to show instead of console.log\r\n        axios\r\n        .put(`/orders/update/${props.match.params.id}`, formData)\r\n        .then((res)=> setMessage(res.data))\r\n        .catch((err) => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios\r\n          //props pass from app.js to order.js\r\n          .get(`/orders/${props.match.params.id}`)\r\n          .then((res) => [\r\n            setName(res.data.name),\r\n            setEmail(res.data.email),\r\n            setProductno(res.data.productno),\r\n            setFileName(res.data.originalname)\r\n          ])\r\n          .catch((error) => console.log(error));\r\n      }, []);\r\n\r\n\r\n\r\n  return (\r\n    <EditOrderContainer>\r\n       \r\n      <div className=\"container\">\r\n      \r\n        <h1> Edit Customer Order</h1>\r\n        <span className=\"message\">{message}</span>\r\n        <form onSubmit={changeOnClick} encType=\"multipart/form-data\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Customer Name</label>\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e)=> setName(e.target.value)}\r\n              className=\"form-control\"\r\n              placeholder=\"Enter Customer Name\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Customer Email</label>\r\n            <input\r\n              type=\"Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"form-control\"\r\n              placeholder=\"Enter Email Address\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"productno\">Product Number</label>\r\n            <input\r\n              type=\"text\"\r\n              value={productno}\r\n              onChange={(e) => setProductno(e.target.value)}\r\n              className=\"form-control\"\r\n              placeholder=\"Enter Product Number\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"file\"> Choose Product Image</label>\r\n            <input type=\"file\"  filename=\"image\"\r\n            className=\"form-control-file\"\r\n            onChange={onChangeFile}/>\r\n          </div>\r\n\r\n\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Update Order\r\n          </button>\r\n          <Link to =\"/\" type=\"submit\" className=\"btn btn-danger\">\r\n            Back To Home\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </EditOrderContainer>\r\n  );\r\n};\r\n\r\nexport default EditOrder;\r\n\r\n//main container\r\nconst EditOrderContainer = styled.div`\r\n  margin: 3rem auto;\r\n  padding: 4rem;\r\n  width: 41.25rem;\r\n\r\n  h1{\r\n      font-width: 900;\r\n      color: var( --magenta);\r\n      text-align: center;\r\n\r\n  }\r\n\r\n  .btn-primary {\r\n      margin-top: 2rem;\r\n      background: var(--magenta);\r\n      border: none;\r\n      float: right;\r\n    &:hover{\r\n        background: var(--lightMagenta);\r\n    }\r\n  }\r\n\r\n  .message {\r\n      font-weight: 900;\r\n      color: var(--lightMagenta);\r\n      text-align: center;\r\n\r\n  }\r\n  \r\n\r\n  .btn-danger{\r\n    margin-top: 2rem;\r\n    background: var(--lightMagenta);\r\n    border: none;\r\n    float: left;\r\n  &:hover{\r\n      background: var(--lightMagenta);\r\n  }\r\n}\r\n  \r\n`;\r\n",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":26,"nodeType":"55","messageId":"56","endLine":1,"endColumn":35},{"ruleId":"57","severity":1,"message":"58","line":61,"column":10,"nodeType":"59","endLine":61,"endColumn":12,"suggestions":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["63"],"no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},"Update the dependencies array to be: [props.match.params.id]",{"range":"66","text":"67"},[1724,1726],"[props.match.params.id]"]